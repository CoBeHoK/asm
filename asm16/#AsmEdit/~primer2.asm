      ;== ПЕЧАТЬ СУММЫ двух чисел ==
 ;----------------------------------------------------------------------
  .model tiny     ;модель памяти (все в одном сегменте) 
  .code           ;начало сегмента кода 
  org 100h        ;начальное значение счетчика команд

 ;----------------------------------------------------------------------
CLS macro         ;--макрос для очистки экрана
  mov AX, 0003h   ;очистка экрана           
  int 10h         ;(прерывание 10h, функция 0, режим 3)
endm

 ;----------------------------------------------------------------------
TEXT macro Z      ;--макрос печати текста (параметр Z -имя переменной)
                  ;(адрес начала текста из DX, печать до символа "$")
  push AX         ;(AL портится)
  mov AH, 9       ;функция печати текста
  mov DX,offset Z ;вместо параметра Z подставится имя переменной
  int 21h         ;вызов прерывания печати текста 
  pop AX
endm

 ;----------------------------------------------------------------------
START:
  CLS         ;-вставка макроса для очистки экрана
              ;-сумма чисел 2 и 6
  mov AL, 2   ;AL=2
  mov BL, 6   ;BL=6
  add AL, BL  ;AL=AL+BL

  TEXT Y      ;-макрос печати текста из переменной Y

       ;--преобразование числа (0..9, 10..15) в символ '0'..'9', 'A'..'F'
       ;       '0'..'9' имеют 16-е коды 30..39 (на 30h больше)
       ;       'A'..'F' имеют 16-е коды 41..46 (на 37h больше, т.е. еще +7)
  add AL, 30h ;преобразование числа в символ
  cmp AL, '9' ;сравнение с символом "9"
  jc Metka    ;если меньше  (0..8), то на печать
  jz Metka    ;если равно   (9),    то на печать
              ;или jbe Metka  ;или: если <= (0..9), то на печать 
  add AL, 07h ;если больше  (A..F), то AL=AL+7

Metka:
  call WRITE  ;-вызов подпрограммы печати символа из AL
  call PAUSE  ;-вызов подпрограммы паузы
  mov AH,4Ch  ;-прерывание для выхода из программы
  int 21h                
 ;----------------------------------------------------------------------
              ;-данные (переменная с печатаемым текстом)
 Y db 'Сумма',13,10,'чисел 2 и 6 равна ', '$'     

 ;----------------------------------------------------------------------
PAUSE:        ;-подпрограмма приостановки до любого нажатия
  mov AH, 10h ;функция опроса клавиатуры
  int 16h     ;вызов прерывания для ожидания нажатия
  ret         ;возврат из подпрограммы
              ;(номер нажатой клавиши будет в регистре AL)

 ;----------------------------------------------------------------------
WRITE:        ;-подпрограмма печати символа из регистра AL
  push AX     ;сохранить AX в стеке
  mov AH, 0Eh ;функция печати символа из AL
  int 10h     ;вызов прерывания печати символа
  pop AX      ;восстановить AX из стека
  ret         ;возврат из подпрограммы

 ;----------------------------------------------------------------------
end START